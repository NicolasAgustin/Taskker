@using Taskker.Models;
@using Taskker.Models.DAL;

@model Usuario

@{
    ViewBag.Title = "Profile";
    var picture = ((UserSession)Session["UserSession"]).EncodedPicture;
}

<nav>
    <div class="nav-wrapper">
        <a href="@Url.Action("Index", "Home")" class="brand-logo">Taskker</a>
    </div>
</nav>

@Html.Partial("_Menu")


<div class="container">
    <div class="row">
        @Html.ValidationSummary(false, "", new { @style = "color:red;font-weight:bold" })
        @using (Html.BeginForm("ModifyProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="col s6 offset-s3">
                <div class="card blue-grey darken-1">
                    <div class="card-content white-text">
                        @* hay que agregar un boton para que se pueda cambiar la foto de perfil *@
                        <div class="row center-align">
                            <div class="user-view">
                                <img style="height:250px; width:250px" class="circle responsive-img" src="@picture">
                            </div>
                        </div>

                        <input type="hidden" value="@picture" name="Photo">

                        <!--Fila para nombre y apellido-->
                        @* hay que separar el nombre del apellido *@
                        <div class="row">
                            <div class="input-field col s6">
                                @Html.EditorFor(model => model.Nombre)
                                <!--<input id="first_name" type="text" class="validate">-->
                                <label for="first_name">Nombre</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="input-field col s6">
                                @Html.EditorFor(model => model.Apellido)
                                <!--<input id="first_name" type="text" class="validate">-->
                                <label for="first_name">Apellido</label>
                            </div>
                        </div>
                        <!--Fila para email-->
                        <div class="row">
                            <div class="input-field col s12">
                                @Html.EditorFor(model => model.Email)
                                <!--<input id="email" type="email" class="validate">-->
                                <label for="email">Correo electronico</label>
                            </div>
                        </div>
                        <!--Fila para password-->
                    </div>
                </div>
                <div class="row center-align">
                    <button class="btn waves-effect waves-light" type="submit" name="action">
                        Guardar cambios
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@*

    aca hay que mostrar el nombre del usuario
    el email
    la foto de perfil, etc

    hay que hacer un formulario donde se muestren los datos ya cargados
    para que el usuario los modifique.

    Tambien hay que agregar un boton para subir otra foto de perfil

    el usuario se va a actualizar independientemente de si verdaderamente se modifico o no.

*@

