@using Taskker.Models;
@using Taskker.Models.DAL;

@{
    var session = Session["UserSession"] as UserSession;
    var email = session.Email;
    var picture = session.EncodedPicture;
    var nombre = session.NombreApellido;
    var gruposNombres = (List<string>)Session["Grupos"];
}

<script>
    // Inicializamos el sidenav
    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.sidenav');
        M.Sidenav.init(elems, { edge: 'left' });

        var collapsibleElems = document.querySelectorAll('.collapsible');
        M.Collapsible.init(collapsibleElems, {});


        var elemsDropdown = document.querySelectorAll('.dropdown-trigger');
        M.Dropdown.init(elemsDropdown, {});

        $('.btndel-note').on('click', function (element) {
            var nid = element.target.getAttribute('data')
            $.ajax({
                type: "GET",
                url: "/Browse/DeleteNote",
                data: { id: nid },
                success: function (data) {
                    if (data) {
                        $(`#${nid}`).remove()
                    } else {
                        alert("No se pudo eliminar la nota.")
                    }
                }
            })
        })

        $('.btnedit-note').on('click', function (element) {
            debugger;
            var nid = element.target.getAttribute('data');
            var note = $(`.edit-trigger[data=${nid}]`).toArray()[0];
            var noteUpdated = note.textContent;
            $.ajax({
                type: "GET",
                url: "/Browse/UpdateNote",
                data: { id: nid, text: noteUpdated },
                success: function (data) {
                    if (!data) {
                        alert("No se pudo actualizar la nota.")
                    }
                }
            })
        })
    });
</script>

<ul id="slide-out" class="sidenav" style="width: 450px !important">
    <li>
        <div class="user-view">
            <div class="background">
                <img src="@Url.Content("~/images/fondo-rosa.jpg")">
            </div>
            <a href="#user"><img class="circle" src="@picture"></a>
            <a href="#name"><span class="white-text name">@nombre</span></a>
            <a href="#email"><span class="white-text email">@email</span></a>
            <a href="@Url.Action("Logout", "Auth")">Salir</a> | <a href="@Url.Action("Index", "Account")">Perfil</a>
        </div>
    </li>
    <li><a href="@Url.Action("Create", "Groups")"><i class="material-icons">group</i>Crear grupo</a></li>
    <li><a href="@Url.Action("Join", "Groups")"><i class="material-icons">group_add</i>Unirse</a></li>
    <li><div class="divider"></div></li>
    <li><a class="subheader">Grupos</a></li>
    @{
        foreach (var grupo in gruposNombres)
        {
            <li><a class="waves-effect" href="@Url.Action("Index", "Browse", new { grupo = grupo })">@grupo</a></li>
        }
    }
    <li>
        <!-- Notas -->
        <ul class="collapsible">
            <li>
                <div class="collapsible-header"><i class="material-icons">border_color</i>Notas</div>
                <div class="collapsible-body">
                    <div class="row">
                        @Html.ValidationSummary(false, "", new { @style = "color:red;font-weight:bold" })
                        @using (Html.BeginForm("CreateNote", "Browse", FormMethod.Post, new { @class = "col s12" }))
                        {
                            <div class="row">

                                <div class="input-field col s9">
                                    <textarea id="icon_prefix2" class="materialize-textarea" name="text"></textarea>
                                </div>

                                <div class="col s2">
                                    <button class="btn-small waves-effect waves-light" type="submit" name="action">
                                        <i class="material-icons right">send</i>
                                    </button>
                                </div>
                            </div>
                        }

                    </div>
                    <div class="collection" id="display-notes">
                        @{
                                List<Note> notas = (List<Note>)ViewData["Notes"];
                                foreach (var note in notas ?? Enumerable.Empty<Note>())
                                {
                                <div class="collection-item" id="@note._id">
                                    <div class="row">
                                        <a href="#" data="@note._id" class="edit-trigger" contenteditable="true">@note.text</a>
                                    </div>

                                    <div class="row">
                                        <a href="#" data="@note._id" class="waves-effect waves-light btn-small btndel-note">Eliminar</a>
                                        <a href="#" data="@note._id" class="waves-effect waves-light btn-small btnedit-note">Editar</a>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </li>
        </ul>
    </li>
</ul>
