@using Taskker.Models
@using Taskker.Models.DAL
@model Tarea

<style>
    [contenteditable] {
        outline: 0px solid transparent;
    }

    #modal-title :hover {
        background-color: rgba(0, 0, 0, 0.45);
    }
</style>
<!--
    TODO:
    agregar cards para textarea de descripcion
    agregar hover para titulo
    obtener todo desde javascript y hacer la consulta al endpoint con ajax
    conseguir que la tarea se actualice en el momento que se cierra el modal
    queda hacer que cuando se cierre el modal se mande la info al backend
-->
<!-- Modal Structure -->
<div class="modal-content red lighten-4"
     id="details-task"
     data-id="@Model.ID">
    @using (Html.BeginForm("UpdateTask", "Browse", FormMethod.Post, new { @class = "col s6", @id = "update-form" }))
    {
        <h4 id="modal-title"
            class="highlight"
            contenteditable="true">
            @Model.Titulo
        </h4>
        <input type="hidden" name="id" value="@Model.ID" />
        <input type="hidden" id="task-title" name="titulo" value="@Model.Titulo" />
        <div class="row">
            <div class="input-field col s12">
                <div class="card-panel teal">
                    <textarea id="textarea1"
                              class="materialize-textarea"
                              style="color:aliceblue"
                              name="descripcion">@Model.Descripcion</textarea>
                    <label for="textarea1" style="color:aliceblue">Descripcion</label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="input-field col s6">
                <div class="card-panel teal">
                    @{ 
                        // Hace falta que cuando se vean los detalles de la tarea
                        // se auto seleccione el tipo de tarea que esta en la tarea
                        // que se esta visualizando
                    }
                    <select name="tipo">
                        <option value="" disabled selected>Seleccionar tipo</option>
                        <option value="@TareaTipo.Desarrollo">Desarrollo</option>
                        <option value="@TareaTipo.Tarea">Tarea</option>
                    </select>
                    <label>Tipo de tarea</label>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col s6">
                <div class="card-panel teal">
                    <input type="hidden"
                           id="chips-values"
                           name="asignees" />
                    <div id="asignees-chips" class="chips-autocomplete">
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="modal-footer">
    <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
</div>

<script>

    var taskid = null

    $(document).ready(function () {

        var elems = document.querySelectorAll('select');
        var instances = M.FormSelect.init(elems);

        // Funcion para actualizar el input oculto cada vez que se modifique el h4
        // que posee el contenteditable
        document.getElementById('modal-title').addEventListener('input', function (elem) {
            document.getElementById('task-title').value = elem.target.innerText
        })

        taskid = $('#details-task')[0].getAttribute('data-id')

        var usuarios = {}
        var chipsUsers = []

        var asignees = {}
        var chipsAsignees = []

        $.ajax({
            type: 'GET',
            url: "/Browse/GetUsers",
            success: function (data) {
                for (const [key, value] of Object.entries(data)) {
                    usuarios[key] = value;
                    chipsUsers.push({
                        tag: key,
                        image: value
                    })
                }
            }
        });

        $.ajax({
            type: 'GET',
            url: `/Browse/GetUsersInTask/${taskid}`,
            success: function (data) {

                var usersString = []

                for (const [key, value] of Object.entries(data)) {
                    asignees[key] = value;
                    usersString.push(key)
                    chipsAsignees.push({
                        tag: key,
                        image: value
                    })
                }

                document.getElementById('chips-values')
                    .setAttribute(
                        'value',
                        usersString.join(',')
                    )

                var elems = document.querySelectorAll('.chips-autocomplete');
                var chipInstance = M.Chips.init(
                    elems,
                    {
                        data: chipsAsignees,
                        onChipAdd: function (chip) {
                            var instance = M.Chips.getInstance(
                                $('#asignees-chips')
                            )

                            var selected = []

                            selected = instance.chipsData.map(
                                function (value, index) {
                                    return value['tag']
                                }
                            )

                            document.getElementById("chips-values")
                                .setAttribute(
                                    'value',
                                    selected.join(',')
                                )
                        },
                        onChipDelete: function () {
                            var instance = M.Chips.getInstance(
                                $('#asignees-chips')
                            )
                            var data = instance.chipsData
                            selected = data.map(
                                function (value, index) {
                                    return value['tag']
                                }
                            )
                            document.getElementById("chips-values")
                                .setAttribute(
                                    'value',
                                    selected.join(',')
                                )
                        },
                        autocompleteOptions: {
                            data: usuarios
                        },
                        placeholder: 'Asignar'
                    }
                );
            }
        })
    })
</script>