@using Taskker.Models
@using Taskker.Models.DAL
@model Tarea

<style>

    .modal {
        width: 85% !important;
        height: auto !important;
    }

    .theme-colour {
        background-color: #d96d6d !important;
    }

    .theme-colour2 {
        background-color: #bf5e62 !important;
    }

    .danger {
        background-color: #c64449 !important;
    }

    .control-color {
        color: white !important;
    }

    .input, .select-dropdown {
        color: white !important;
    }
</style>

<script>
    $(document).ready(function () {
        var encontrados = $("a[name=borrar-tiempo]").toArray()
        encontrados.forEach(e => e.addEventListener('click', function (elem) {
            var target = elem.target
            var index = target.getAttribute('data-index')
            $.ajax({
                url: "/Browse/DeleteTimeTracked",
                type: 'GET',
                data: { id: index },
                success: function () {
                    target.parentElement.remove()
                }
            })
        }))

        $('.secondary-content').on('click', function (elem) {
            console.log(elem)
            var index = elem.currentTarget.getAttribute('data')
            var tiempoId = elem.currentTarget.getAttribute('data-id')
            console.log(index)
            var item = $(`#${index}`).toArray()[0]
            console.log(item)
            $.ajax({
                url: "/Browse/DeleteTimeTracked",
                type: 'GET',
                data: { id: tiempoId },
                success: function () {
                    item.remove()
                    alert('Se elimino una asignacion de tiempo.')
                }
            })
            
        })

        $('#task-title-display').on('input', function (elem) {
            var newTitle = document.getElementById("task-title-display").innerText
            document.getElementById("task-title").value = newTitle
        })

    })
</script>

<!-- Modal Structure -->
<div class="modal-content theme-colour2"
     id="details-task"
     data-id="@Model.ID">
    <div class="container">
        <div class="row">
            <div class="col s4">

                <i class="medium material-icons left control-color">assignment</i>
                <h2 contenteditable="true" class="control-color" style="font-weight: bold" id="task-title-display">@Model.Titulo</h2>
                @*<div class=" offset-s4">
                    <a href="#" class="brand-logo" id="modal-title" contenteditable="true">@Model.Titulo</a>
                </div>*@
            </div>
            <div class="col s4 offset-s4">
                <div class="row">
                    @if (((List<string>)ViewData["Roles"]).Contains("Project Manager"))
                    {
                        using (Html.BeginForm("DeleteTask", "Browse", FormMethod.Post))
                        {
                            <input type="hidden" value="@Model.ID" name="id" />
                            <button type="submit" class="btn waves-effect waves-light danger" style="margin-top: 15px">
                                <i class="material-icons right">delete</i>Eliminar
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="row">
            @* Probar con una lista donde cada elemento li tenga un atributo name como:
           lista[0].tiempo
           lista2[0].nombre
           lista[1].tiempo ...
           lista[n].tiempo ...
        de esta forma usamos el model binding
            *@
            @Html.ValidationSummary(false, "", new { @style = "color:red;font-weight:bold" })
            @using (Html.BeginForm("UpdateTask", "Browse", FormMethod.Post, new { @class = "col s12", @id = "update-form" }))
            {
                <input type="hidden" name="id" value="@Model.ID" />
                <input type="hidden" id="task-title" name="titulo" value="@Model.Titulo" />

                <div class="col s6">

                    <div class="row">

                        <div class="input-field">
                            <textarea id="textarea1"
                                      class="materialize-textarea control-color"
                                      placeholder="Descripcion"
                                      name="descripcion">@Model.Descripcion</textarea>
                        </div>

                    </div>

                    <div class="row">
                        <select name="tipo">
                            @{
                                if (Model.Tipo == TareaTipo.SinTipo)
                                {
                                    <option value="@TareaTipo.SinTipo" disabled selected>Seleccionar tipo</option>
                                    <option value="@TareaTipo.Desarrollo">Desarrollo</option>
                                    <option value="@TareaTipo.Tarea">Tarea</option>
                                }
                                else if (Model.Tipo == TareaTipo.Desarrollo)
                                {
                                    <option value="@TareaTipo.SinTipo" disabled>Seleccionar tipo</option>
                                    <option value="@TareaTipo.Desarrollo" selected>Desarrollo</option>
                                    <option value="@TareaTipo.Tarea">Tarea</option>
                                }
                                else if (Model.Tipo == TareaTipo.Tarea)
                                {
                                    <option value="@TareaTipo.SinTipo" disabled>Seleccionar tipo</option>
                                    <option value="@TareaTipo.Desarrollo">Desarrollo</option>
                                    <option value="@TareaTipo.Tarea" selected>Tarea</option>
                                }
                            }
                        </select>
                    </div>

                    @*Asignees*@
                    <div class="row">
                        <input type="hidden" id="chips-values" name="asignees" />
                        <div id="asignees-chips" class="chips-autocomplete control-color"></div>
                    </div>


                    <div class="row">
                        <p class="control-color">Estimado</p>
                        <input type="time" class="control-color" min="00:00"
                               max="23:59" value="@Model.Estimado.ToString("HH:mm")" name="estimado" />
                    </div>

                    <div class="row">
                        <p class="control-color">Registrar</p>
                        <input type="time" class="control-color" min="00:00"
                               max="23:59" value="00:00" name="TiempoRegistrado" />
                    </div>
                </div>

                <div class="col s6">
                    <div class="row">
                        <ul class="collection" style="border: none">
                            @{var i = 0;}
                            @foreach (var tiempo in Model.TiempoRegistrado)
                            {
                                // vamos a agregar un index al boton, para que tenga el dato,
                                // tambien agregamos el indice como id del item list
                                // cuando presionemos el boton, este tomara el data-index
                                // y buscara el li que tenga como id ese data-index y que tenga la clase
                                // item-tiempo
                                <li class="collection-item item-tiempo theme-colour" id="@i" style="border-radius: 25px">
                                    <div class="row" style="padding-top: 5px; margin-bottom: 0px">
                                        <div class="col s4 control-color">@tiempo.Time.ToString("HH:mm")</div>
                                        <div class="col s4 control-color">@tiempo.Usuario.NombreApellido</div>
                                        <div class="col s4">
                                            <a href="#!" class="secondary-content control-color" data="@i"
                                               data-id="@tiempo.ID"><i class="material-icons">delete</i></a>
                                        </div>
                                    </div>
                                    <input type="hidden" name="Tiempos[@i].Tiempo" value="@tiempo.Time.ToString()" />
                                    <input type="hidden" name="Tiempos[@i].UsuarioID" value="@tiempo.UsuarioID" />
                                    <input type="hidden" name="Tiempos[@i].TareaID" value="@tiempo.TareaID" />
                                </li>
                                i++;
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
    
</div>
<div class="modal-footer theme-colour2">
    <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
</div>

<script>

    var taskid = null

    $(document).ready(function () {

        var elems = document.querySelectorAll('select');
        M.FormSelect.init(
            elems,
            {
                coverTrigger: false
            }
        );

        M.textareaAutoResize($('#textarea1'));

        taskid = $('#details-task')[0].getAttribute('data-id')

        var usuarios = {}
        var chipsUsers = []

        var asignees = {}
        var chipsAsignees = []

        $.ajax({
            type: 'GET',
            url: "/Browse/GetUsers",
            success: function (data) {
                for (const [key, value] of Object.entries(data)) {
                    usuarios[key] = value;
                    chipsUsers.push({
                        tag: key,
                        image: value
                    })
                }
            }
        });

        $.ajax({
            type: 'GET',
            url: `/Browse/GetUsersInTask/${taskid}`,
            success: function (data) {

                var usersString = []

                for (const [key, value] of Object.entries(data)) {
                    asignees[key] = value;
                    usersString.push(key)
                    chipsAsignees.push({
                        tag: key,
                        image: value
                    })
                }

                document.getElementById('chips-values')
                    .setAttribute(
                        'value',
                        usersString.join(',')
                    )

                var elems = document.querySelectorAll('.chips-autocomplete');
                var chipInstance = M.Chips.init(
                    elems,
                    {
                        data: chipsAsignees,
                        onChipAdd: function (chip) {
                            var instance = M.Chips.getInstance(
                                $('#asignees-chips')
                            )

                            var selected = []

                            selected = instance.chipsData.map(
                                function (value, index) {
                                    return value['tag']
                                }
                            )

                            document.getElementById("chips-values")
                                .setAttribute(
                                    'value',
                                    selected.join(',')
                                )
                        },
                        onChipDelete: function () {
                            var instance = M.Chips.getInstance(
                                $('#asignees-chips')
                            )
                            var data = instance.chipsData
                            selected = data.map(
                                function (value, index) {
                                    return value['tag']
                                }
                            )
                            document.getElementById("chips-values")
                                .setAttribute(
                                    'value',
                                    selected.join(',')
                                )
                        },
                        autocompleteOptions: {
                            data: usuarios
                        },
                        placeholder: 'Asignar'
                    }
                );
            }
        })
    })
</script>